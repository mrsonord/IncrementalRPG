// Generated by CoffeeScript 1.7.1
(function() {
  "use strict";
  var $, bldHouse, bldMill, bldMine, bldQuarry, bldSilo, bldTent, bunkBeds, carpentry, checkMaxFood, checkMaxOre, checkMaxStone, checkMaxwood, food, foodInc, gatherFood, gatherOre, gatherStone, gatherWood, hagStone, hagWood, hostel, house, logInc, masonry, maxPop, mill, mine, nIntervId, names, ore, oreInc, quarry, self, silo, sleepingBags, stone, stoneInc, tent, titleCase, upMasonry, upSelf, updateValues, wood;

  define(function(require) {
    var $, bootstrap, units;
    $ = require("jquery");
    units = require("./units");
    return bootstrap = require("bootstrap");
  });

  $ = jQuery;

  names = {
    realm: "",
    king: ""
  };

  self = {
    increment: 1,
    upgrade: {
      wood: 100,
      stone: 100,
      food: 100,
      silver: 0,
      gold: 0
    }
  };

  wood = {
    amount: 0,
    increment: 0,
    max: 100
  };

  stone = {
    amount: 0,
    increment: 0,
    max: 100
  };

  food = {
    amount: 0,
    increment: 0,
    max: 100
  };

  ore = {
    increment: 0,
    amount: 0,
    max: 200,
    iron: {
      amount: 0
    },
    copper: {
      amount: 0
    },
    silver: {
      amount: 0
    },
    gold: {
      amount: 0
    }
  };

  tent = {
    amount: 0,
    residents: 1,
    health: 200,
    cost: {
      wood: 30
    },
    upCost: {
      wood: 70,
      silver: 50,
      gold: 25
    }
  };

  house = {
    amount: 0,
    residents: 4,
    health: 500,
    cost: {
      wood: 75,
      stone: 25
    },
    upCost: {
      wood: 100,
      stone: 100,
      silver: 60,
      gold: 30
    }
  };

  hostel = {
    amount: 0,
    residents: 10,
    health: 1200,
    cost: {
      wood: 200,
      stone: 215,
      iron: 25
    }
  };

  mine = {
    amount: 0,
    health: 500,
    cost: {
      wood: 100,
      stone: 100,
      iron: 25
    }
  };

  quarry = {
    amount: 0,
    health: 500,
    cost: {
      wood: 100,
      stone: 100
    }
  };

  silo = {
    amount: 0,
    health: 500,
    cost: {
      wood: 100,
      stone: 100
    }
  };

  mill = {
    amount: 0,
    health: 500,
    cost: {
      wood: 100,
      stone: 100
    }
  };

  carpentry = {
    cost: {
      silver: 50,
      gold: 25
    }
  };

  masonry = {
    cost: {
      silver: 50,
      gold: 25
    }
  };

  maxPop = (tent.residents * tent.amount) + (house.residents * house.amount);

  nIntervId = void 0;

  bunkBeds = $('#upgradeBunkBeds');

  bldTent = $('#buildTent');

  bldHouse = $('#buildHouse');

  sleepingBags = $('#upgradeSleepingBags');

  bldMine = $('#buildMine');

  bldMill = $('#buildMill');

  bldSilo = $('#buildSilo');

  bldQuarry = $('#buildQuarry');

  hagStone = $('#upgradeMasonry');

  stoneInc = $('#upgradeStrengthenShovels');

  hagWood = $('#upgradeCarpentry');

  foodInc = $('#upgradeSharpenArrows');

  upSelf = $('#upgradeSelf');

  oreInc = $('#upgradeSharpenPicks');

  upMasonry = $('#upgradeMasonry');

  hagWood = $('#upgradeCarpentry');

  logInc = $('#upgradeSharpenAxes');

  checkMaxwood = function() {
    if (wood.amount >= wood.max) {
      wood.amount = wood.max;
    }
  };

  checkMaxStone = function() {
    if (stone.amount >= stone.max) {
      stone.amount = stone.max;
    }
  };

  checkMaxFood = function() {
    if (food.amount >= food.max) {
      food.amount = food.max;
    }
  };

  checkMaxOre = function() {
    var oreTotal;
    oreTotal = ore.iron.amount + ore.copper.amount + ore.silver.amount + ore.gold.amount;
    if (oreTotal >= ore.max) {
      ore.amount = ore.max;
    }
  };

  updateValues = function() {
    ore.increment = miner.increment * miner.amount;
    wood.increment = logger.increment * logger.amount;
    stone.increment = mason.increment * mason.amount;
    food.increment = hunter.increment * hunter.amount;
    checkMaxOre();
    ore.amount = ore.iron.amount + ore.copper.amount + ore.silver.amount + ore.gold.amount;
    document.getElementById("maxPop").innerHTML = maxPop;
    document.getElementById("tentAmount").innerHTML = tent.amount;
    document.getElementById("tentResidents").innerHTML = tent.residents;
    document.getElementById("houseAmount").innerHTML = house.amount;
    document.getElementById("houseResidents").innerHTML = house.residents;
    document.getElementById("millAmount").innerHTML = mill.amount;
    document.getElementById("quarryAmount").innerHTML = quarry.amount;
    document.getElementById("siloAmount").innerHTML = silo.amount;
    document.getElementById("mineAmount").innerHTML = mine.amount;
    document.getElementById("maxOre").innerHTML = ore.max;
    document.getElementById("ironAmount").innerHTML = ore.iron.amount;
    document.getElementById("copperAmount").innerHTML = ore.copper.amount;
    document.getElementById("silverAmount").innerHTML = ore.silver.amount;
    document.getElementById("goldAmount").innerHTML = ore.gold.amount;
    document.getElementById("oreAmount").innerHTML = ore.amount;
    document.getElementById("maxWood").innerHTML = wood.max;
    document.getElementById("woodAmount").innerHTML = wood.amount;
    document.getElementById("stoneAmount").innerHTML = stone.amount;
    document.getElementById("foodAmount").innerHTML = food.amount;
    document.getElementById("woodIncrement").innerHTML = wood.increment;
    document.getElementById("maxStone").innerHTML = stone.max;
    document.getElementById("stoneIncrement").innerHTML = stone.increment;
    document.getElementById("maxFood").innerHTML = food.max;
    document.getElementById("foodIncrement").innerHTML = food.increment;
    document.getElementById("workerAmount").innerHTML = worker.amount;
    document.getElementById("loggerAmount").innerHTML = logger.amount;
    document.getElementById("masonAmount").innerHTML = mason.amount;
    document.getElementById("minerAmount").innerHTML = miner.amount;
    document.getElementById("hunterAmount").innerHTML = hunter.amount;
    document.getElementById("loggerCost").innerHTML = logger.cost;
    document.getElementById("minerCost").innerHTML = miner.cost;
    document.getElementById("hunterCost").innerHTML = hunter.cost;
    document.getElementById("masonCost").innerHTML = mason.cost;
    document.getElementById("upgradeSelfTotal").innerHTML = self.increment;
    document.getElementById("oreIncrement").innerHTML = ore.increment;
  };

  gatherWood = function() {
    wood.amount += wood.increment;
    checkMaxwood();
    updateValues();
  };

  gatherStone = function() {
    stone.amount += stone.increment;
    checkMaxStone();
    updateValues();
  };

  gatherFood = function() {
    food.amount += food.increment;
    checkMaxFood();
    updateValues();
  };

  gatherOre = function() {
    var miners, oreChoice, ores;
    if (!(ore.amount >= ore.max)) {
      ores = ["c", "c", "c", "i", "i", "i", "i", "s", "s", "g"];
      miners = miner.amount;
      oreChoice = ores[Math.floor(Math.random() * ores.length)];
      if (oreChoice === "i") {
        ore.iron.amount += ore.increment;
        ore.amount += ore.increment;
      } else if (oreChoice === "c") {
        ore.copper.amount += ore.increment;
        ore.amount += ore.increment;
      } else if (oreChoice === "s") {
        ore.silver.amount += ore.increment;
        ore.amount += ore.increment;
      } else {
        ore.gold.amount += ore.increment;
        ore.amount += ore.increment;
      }
      checkMaxOre();
      updateValues();
    }
  };

  $(document).ready(function() {
    var beginTick, tick;
    beginTick = function() {
      nIntervId = setInterval(tick, 5000);
    };
    tick = function() {
      gatherWood();
      gatherStone();
      gatherFood();
      gatherOre();
    };
    beginTick();
    updateValues();

    /*$("#modalClose").click ->
      names.realm = document.getElementById("realm").value
      document.getElementById("realmName").innerHTML = names.realm
      names.king = document.getElementById("king").value
      document.getElementById("kingName").innerHTML = names.king
      return
     */
  });

  titleCase = function(str) {
    return str.charAt(0).toUpperCase() + str.slice(1);
  };

  $('#chopWood').click(function() {
    wood.amount += self.increment;
    checkMaxwood();
    updateValues();
  });

  $('#mineStone').click(function() {
    stone.amount += self.increment;
    checkMaxStone();
    updateValues();
  });

  $('#gatherFood').click(function() {
    food.amount += self.increment;
    checkMaxFood();
    updateValues();
  });

  $('#mineOre').click(function() {
    var oreChoice, ores;
    if (!(ore.amount >= ore.max)) {
      ores = ["c", "c", "c", "i", "i", "i", "i", "s", "s", "g"];
      oreChoice = ores[Math.floor(Math.random() * ores.length)];
      if (oreChoice === "i") {
        ore.iron.amount += self.increment;
        ore.amount += self.increment;
      } else if (oreChoice === "c") {
        ore.copper.amount += self.increment;
        ore.amount += self.increment;
      } else if (oreChoice === "s") {
        ore.silver.amount += self.increment;
        ore.amount += self.increment;
      } else {
        ore.gold.amount += self.increment;
        ore.amount += self.increment;
      }
      checkMaxOre();
      updateValues();
    }
  });

  $('#hireLogger').click(function() {
    if (worker.amount < maxPop) {
      if (food.amount >= logger.cost) {
        food.amount -= logger.cost;
        worker.amount++;
        logger.amount++;
        logger.cost++;
        return updateValues();
      } else {
        return $('#info').prepend($("<p>You need more food.</p>").fadeIn("slow"));
      }
    } else {
      return $('#info').prepend($("<p>You need to build more accommodation.</p>").fadeIn("slow"));
    }
  });

  $('#hireMiner').click(function() {
    if (worker.amount < maxPop) {
      if (food.amount >= miner.cost) {
        food.amount -= miner.cost;
        worker.amount++;
        miner.amount++;
        miner.cost++;
        return updateValues();
      } else {
        return $('#info').prepend($("<p>You need more food.</p>").fadeIn("slow"));
      }
    } else {
      return $('#info').prepend($("<p>You need to build more accommodation.</p>").fadeIn("slow"));
    }
  });

  $('#hireHunter').click(function() {
    if (worker.amount < maxPop) {
      if (food.amount >= hunter.cost) {
        food.amount -= hunter.cost;
        worker.amount++;
        hunter.amount++;
        hunter.cost++;
        return updateValues();
      } else {
        return $('#info').prepend($("<p>You need more food.</p>").fadeIn("slow"));
      }
    } else {
      return $('#info').prepend($("<p>You need to build more accommodation.</p>").fadeIn("slow"));
    }
  });

  $('#hireMason').click(function() {
    if (worker.amount < maxPop) {
      if (food.amount >= mason.cost) {
        food.amount -= mason.cost;
        worker.amount++;
        mason.amount++;
        mason.cost++;
        return updateValues();
      } else {
        return $('#info').prepend($("<p>You need more food.</p>").fadeIn("slow"));
      }
    } else {
      return $('#info').prepend($("<p>You need to build more accommodation.</p>").fadeIn("slow"));
    }
  });

  bldTent.mouseenter(function() {
    var price, resource, tentPriceText;
    tentPriceText = (function() {
      var _ref, _results;
      _ref = tent.cost;
      _results = [];
      for (resource in _ref) {
        price = _ref[resource];
        _results.push("" + (titleCase(resource)) + ": -" + price + " ");
      }
      return _results;
    })();
    $(this).tooltip({
      title: tentPriceText,
      placement: "left",
      container: "body"
    });
  });

  bldTent.click(function() {
    if (wood.amount >= tent.cost.wood) {
      wood.amount -= tent.cost.wood;
      tent.amount += 1;
      tent.cost.wood = (tent.cost.wood * 1.2).toFixed(0);
      maxPop += tent.residents;
      document.getElementById('tentAmount').innerHTML = tent.amount;
      document.getElementById('maxPop').innerHTML = maxPop;
      updateValues();
      return $(this).tooltip('destroy');
    } else {
      return $('#info').prepend($("<p>You need more wood.</p>").fadeIn("slow"));
    }
  });

  bldHouse.mouseenter(function() {
    var housePriceText, price, resource;
    housePriceText = (function() {
      var _ref, _results;
      _ref = house.cost;
      _results = [];
      for (resource in _ref) {
        price = _ref[resource];
        _results.push("" + (titleCase(resource)) + ": -" + price + " ");
      }
      return _results;
    })();
    $(this).tooltip({
      title: housePriceText,
      placement: "left",
      container: "body"
    });
  });

  bldHouse.click(function() {
    if (wood.amount >= house.cost.wood && stone.amount >= house.cost.stone) {
      wood.amount -= house.cost.wood;
      stone.amount -= house.cost.stone;
      house.amount += 1;
      house.cost.wood = (house.cost.wood * 1.2).toFixed(0);
      house.cost.stone = (house.cost.stone * 1.2).toFixed(0);
      maxPop += house.residents;
      document.getElementById("houseAmount").innerHTML = house.amount;
      document.getElementById("maxPop").innerHTML = maxPop;
      updateValues();
      return bldHouse.tooltip('destroy');
    } else {
      return $('#info').prepend($("<p>You need more building materials.</p>").fadeIn("slow"));
    }
  });

  $('#researchHostel').click(function() {
    var animationLength, getPercent, getProgressWrapWidth, progressTotal, progressWrap;
    progressWrap = document.getElemenyByClass("progress-wrap-hostel");
    if (wood.amount >= 400 && stone.amount >= 150) {
      wood.amount -= 400;
      stone.amount -= 150;
      $('#researchHostel').addClass('hidden');
      progressWrap.removeClass('hidden');
      getPercent = progressWrap.data("progress-percent-hostel") / 100;
      getProgressWrapWidth = progressWrap.width();
      progressTotal = getPercent * getProgressWrapWidth;
      animationLength = 25000;
      $('.progress-bar-hostel').stop().animate({
        left: progressTotal
      }, animationLength, function() {
        $('#buildHostel').removeClass('hidden');
        $('.progress-wrap-hostel').addClass('hidden');
        $('.hostelInfo').removeClass('hidden');
        $('.hostelResearchInfo').addClass('hidden');
      });
      return updateValues();
    } else {
      return $('#info').prepend($("<p>You need more building materials.</p>").fadeIn("slow"));
    }
  });

  $('#buildHostel').click(function() {
    if (wood.amount >= hostel.cost.wood && stone.amount >= hostel.cost.stone) {
      wood.amount -= hostel.cost.wood;
      stone.amount -= hostel.cost.stone;
      hostel.amount += 1;
      hostel.cost.wood = hostel.cost.wood * 1.2;
      hostel.cost.stone = hostel.cost.stone * 1.2;
      hostel.cost.wood = hostel.cost.wood.toFixed(0);
      hostel.cost.stone = hostel.cost.stone.toFixed(0);
      maxPop += hostel.residents;
      return updateValues();
    } else {
      return $('#info').prepend($("<p>You need more building materials.</p>").fadeIn("slow"));
    }
  });

  bldMill.mouseenter(function() {
    var millPrice, price, resource;
    millPrice = (function() {
      var _ref, _results;
      _ref = mill.cost;
      _results = [];
      for (resource in _ref) {
        price = _ref[resource];
        _results.push("" + (titleCase(resource)) + ": -" + price + " ");
      }
      return _results;
    })();
    $(this).tooltip({
      title: millPrice,
      placement: 'left',
      container: 'body'
    });
  });

  bldMill.click(function() {
    if (wood.amount >= mill.cost.wood && stone.amount >= mill.cost.stone) {
      wood.amount -= mill.cost.wood;
      stone.amount -= mill.cost.stone;
      mill.amount += 1;
      wood.max += 100;
      document.getElementById("millAmount").innerHTML = mill.amount;
      document.getElementById("maxWood").innerHTML = wood.max;
      bldMill.tooltip('destroy');
      return updateValues();
    } else {
      return $('#info').prepend($("<p>You need more building materials.</p>").fadeIn("slow"));
    }
  });

  bldQuarry.mouseenter(function() {
    var price, quarryPrice, resource;
    quarryPrice = (function() {
      var _ref, _results;
      _ref = quarry.cost;
      _results = [];
      for (resource in _ref) {
        price = _ref[resource];
        _results.push("" + (titleCase(resource)) + ": -" + price + " ");
      }
      return _results;
    })();
    $(this).tooltip({
      title: quarryPrice,
      placement: "left",
      container: "body"
    });
  });

  bldQuarry.click(function() {
    if (wood.amount >= quarry.cost.wood && stone.amount >= quarry.cost.stone) {
      wood.amount -= quarry.cost.wood;
      stone.amount -= quarry.cost.stone;
      quarry.amount += 1;
      stone.max += 100;
      updateValues();
      document.getElementById("quarryAmount").innerHTML = quarry.amount;
      document.getElementById("maxStone").innerHTML = stone.max;
      return bldQuarry.tooltip('destroy');
    } else {
      return $('#info').prepend($("<p>You need more building materials.</p>").fadeIn("slow"));
    }
  });

  bldSilo.mouseenter(function() {
    var price, resource, siloPriceText;
    siloPriceText = (function() {
      var _ref, _results;
      _ref = silo.cost;
      _results = [];
      for (resource in _ref) {
        price = _ref[resource];
        _results.push("" + (titleCase(resource)) + ": -" + price + " ");
      }
      return _results;
    })();
    $(this).tooltip({
      title: siloPriceText,
      placement: "left",
      container: "body"
    });
  });

  bldSilo.click(function() {
    if (wood.amount >= silo.cost.wood && stone.amount >= silo.cost.stone) {
      wood.amount -= silo.cost.wood;
      stone.amount -= silo.cost.stone;
      silo.amount += 1;
      food.max += 100;
      updateValues();
      document.getElementById("siloAmount").innerHTML = silo.amount;
      document.getElementById("maxFood").innerHTML = food.max;
      return bldSilo.tooltip("destroy");
    } else {
      return $('#info').prepend($("<p>You need more building materials.</p>").fadeIn("slow"));
    }
  });

  bldMine.mouseenter(function() {
    var minePriceText, price, resource;
    minePriceText = (function() {
      var _ref, _results;
      _ref = mine.cost;
      _results = [];
      for (resource in _ref) {
        price = _ref[resource];
        _results.push("" + (titleCase(resource)) + ": -" + price + " ");
      }
      return _results;
    })();
    $(this).tooltip({
      title: minePriceText,
      placement: "left",
      container: "body"
    });
  });

  bldMine.click(function() {
    if (wood.amount >= mine.cost.wood && stone.amount >= mine.cost.stone && ore.iron.amount >= mine.cost.iron) {
      wood.amount -= mine.cost.wood;
      stone.amount -= mine.cost.stone;
      ore.iron.amount -= mine.cost.iron;
      mine.amount += 1;
      ore.max += 100;
      updateValues();
      document.getElementById("mineAmount").innerHTML = mine.amount;
      document.getElementById("maxOre").innerHTML = ore.max;
      return bldMine.tooltip("destroy");
    } else {
      return $('#info').prepend($("<p>You need more building materials.</p>").fadeIn("slow"));
    }
  });

  upSelf.mouseenter(function() {
    var price, resource, upSelfPriceText;
    upSelfPriceText = (function() {
      var _ref, _results;
      _ref = self.upgrade;
      _results = [];
      for (resource in _ref) {
        price = _ref[resource];
        _results.push("" + (titleCase(resource)) + ": -" + price + " ");
      }
      return _results;
    })();
    $(this).tooltip({
      title: upSelfPriceText,
      placement: 'left',
      container: 'body'
    });
  });

  upSelf.click(function() {
    var price, resource;
    if ((function() {
      var _ref, _results;
      _ref = self.upgrade;
      _results = [];
      for (resource in _ref) {
        price = _ref[resource];
        _results.push(resource.amount >= (price * self.increment).toFixed(0));
      }
      return _results;
    })()) {
      resource.amount -= (price * self.increment).toFixed(0);
      self.increment += 1;
      updateValues();
      $('#upgrades').prepend($("<p>Personal Ability | <span id='clickIncrement" + self.increment + "'>" + self.increment + "</span> Resources Per Click</p>").fadeIn("slow"));
      return upSelf.tooltip("destroy");
    } else {
      return $('#info').prepend($("<p>You need more " + resource + ".</p>").fadeIn("slow"));
    }
  });

  sleepingBags.mouseenter(function() {
    var price, resource, sleepingBagsPriceText;
    sleepingBagsPriceText = (function() {
      var _ref, _results;
      _ref = tent.upCost;
      _results = [];
      for (resource in _ref) {
        price = _ref[resource];
        _results.push("" + (titleCase(resource)) + ": -" + price + " ");
      }
      return _results;
    })();
    $(this).tooltip({
      title: sleepingBagsPriceText,
      placement: 'left',
      container: 'body'
    });
  });

  sleepingBags.click(function(event) {
    if (wood.amount >= 100 && ore.silver.amount >= 15 && ore.gold.amount >= 10) {
      $(event.currentTarget).addClass("hidden");
      wood.amount -= 100;
      ore.silver.amount -= 15;
      ore.gold.amount -= 10;
      tent.residents = 2;
      maxPop += tent.amount;
      document.getElementById("maxPop").innerHTML = maxPop;
      document.getElementById("tentResidents").innerHTML = tent.residents;
      $('#upgrades').prepend($("<p>Double Sleeping Bags | Two People, One Tent</p>").fadeIn("slow"));
      return updateValues();
    } else {
      return $('#info').prepend($("<p>You need more resources.</p>").fadeIn("slow"));
    }
  });

  bunkBeds.mouseenter(function() {
    var bunkBedPriceText, price, resource;
    bunkBedPriceText = (function() {
      var _ref, _results;
      _ref = house.upCost;
      _results = [];
      for (resource in _ref) {
        price = _ref[resource];
        _results.push("" + (titleCase(resource)) + ": -" + price + " ");
      }
      return _results;
    })();
    $(this).tooltip({
      title: bunkBedPriceText,
      placement: 'left',
      container: 'body'
    });
  });

  bunkBeds.click(function() {
    var price, resource, _ref;
    if ((function() {
      var _ref, _results;
      _ref = house.upCost;
      _results = [];
      for (resource in _ref) {
        price = _ref[resource];
        _results.push(resource.amount >= price);
      }
      return _results;
    })()) {
      _ref = house.upCost;
      for (resource in _ref) {
        price = _ref[resource];
        resource.amount -= price;
      }
      house.residents = 8;
      maxPop += house.amount * 2;
      document.getElementById("maxPop").innerHTML = maxPop;
      document.getElementById("houseResidents").innerHTML = house.residents;
      bunkBeds.addClass('hidden');
      return $('#upgrades').prepend($("<p>Bunk Beds | Eight People, One House</p>").fadeIn("slow"));
    } else {
      return $('#info').prepend($("<p>You need more resources.</p>").fadeIn("slow"));
    }
  });

  logInc.mouseenter(function() {
    var logIncPrice, price, resource;
    logIncPrice = (function() {
      var _ref, _results;
      _ref = logger.incPrice;
      _results = [];
      for (resource in _ref) {
        price = _ref[resource];
        _results.push("" + (titleCase(resource)) + ": -" + price + " ");
      }
      return _results;
    })();
    $(this).tooltip({
      title: logIncPrice,
      placement: 'left',
      container: 'body'
    });
  });

  logInc.click(function() {
    var price, resource;
    if ((function() {
      var _ref, _results;
      _ref = logger.incPrice;
      _results = [];
      for (resource in _ref) {
        price = _ref[resource];
        _results.push(resource.amount >= price);
      }
      return _results;
    })()) {
      resource.amount -= price;
      logger.increment += 1;
      $('.upgradeSharpenAxes').addClass('hidden');
      $('#upgrades').prepend($("<p>Sharpen Axes | Loggers Chop Two wood Each</p>").fadeIn("slow"));
      return updateValues();
    } else {
      return $('#info').prepend($("<p>You need more resources.</p>").fadeIn('slow'));
    }
  });

  oreInc.mouseenter(function() {
    var oreIncPrice, price, resource;
    oreIncPrice = (function() {
      var _ref, _results;
      _ref = miner.incPrice;
      _results = [];
      for (resource in _ref) {
        price = _ref[resource];
        _results.push("" + (titleCase(resource)) + ": -" + price + " ");
      }
      return _results;
    })();
    $(this).tooltip({
      title: oreIncPrice,
      placement: 'left',
      container: 'body'
    });
  });

  oreInc.click(function() {
    if (wood.amount >= 50 && stone.amount >= 100 && food.amount >= 50) {
      wood.amount -= 50;
      stone.amount -= 100;
      food.amount -= 50;
      miner.increment += 1;
      $('.upgradeSharpenPicks').addClass('hidden');
      $('#upgrades').prepend($("<p>Sharpen Picks | Miners get double resources.</p>").fadeIn("slow"));
      return updateValues();
    } else {
      return $('#info').prepend($("<p>You need more resources.</p>").fadeIn("slow"));
    }
  });

  stoneInc.mouseenter(function() {
    var price, resource, stoneIncPrice;
    stoneIncPrice = (function() {
      var _ref, _results;
      _ref = mason.incPrice;
      _results = [];
      for (resource in _ref) {
        price = _ref[resource];
        _results.push("" + (titleCase(resource)) + ": -" + price + " ");
      }
      return _results;
    })();
    $(this).tooltip({
      title: stoneIncPrice,
      placement: 'left',
      container: 'body'
    });
  });

  stoneInc.click(function() {
    if (wood.amount >= 50 && stone.amount >= 100 && food.amount >= 50) {
      wood.amount -= 50;
      stone.amount -= 100;
      food.amount -= 50;
      mason.increment += 1;
      stone.increment = mason.increment * mason.amount;
      $('.upgradeStrengthenShovels').addClass('hidden');
      $('#upgrades').prepend($("<p>Strengthen Shovels | Masons get double resources.</p>").fadeIn("slow"));
      return updateValues();
    } else {
      return $('#info').prepend($("<p>You need more resources.</p>").fadeIn("slow"));
    }
  });

  foodInc.mouseenter(function() {
    var foodIncPrice, price, resource;
    foodIncPrice = (function() {
      var _ref, _results;
      _ref = hunter.incPrice;
      _results = [];
      for (resource in _ref) {
        price = _ref[resource];
        _results.push("" + (titleCase(resource)) + ": -" + price + " ");
      }
      return _results;
    })();
    $(this).tooltip({
      title: foodIncPrice,
      placement: 'left',
      container: 'body'
    });
  });

  foodInc.click(function() {
    if (wood.amount >= 50 && stone.amount >= 100 && food.amount >= 50) {
      wood.amount -= 50;
      stone.amount -= 100;
      food.amount -= 50;
      hunter.increment += 1;
      $('.upgradeSharpenArrows').addClass('hidden');
      $('#upgrades').prepend($("<p>Sharpen Arrows | Hunters Gather Two Food Each</p>").fadeIn("slow"));
      return updateValues();
    } else {
      return $('#info').prepend($("<p>You need more resources.</p>").fadeIn("slow"));
    }
  });

  hagWood.mouseenter(function() {
    var hagwoodPrice, price, resource;
    hagwoodPrice = (function() {
      var _ref, _results;
      _ref = carpentry.cost;
      _results = [];
      for (resource in _ref) {
        price = _ref[resource];
        _results.push("" + (titleCase(resource)) + ": -" + price + " ");
      }
      return _results;
    })();
    $(this).tooltip({
      title: hagwoodPrice,
      placement: 'left',
      container: 'body'
    });
  });

  hagWood.click(function() {
    if (ore.gold.amount >= 25 && ore.silver.amount >= 50) {
      ore.gold.amount -= 25;
      ore.silver.amount -= 50;
      house.cost.wood -= 30;
      tent.cost.wood -= 15;
      hostel.cost.wood -= 40;
      mill.cost.wood -= 25;
      silo.cost.wood -= 25;
      quarry.cost.wood -= 25;
      mine.cost.wood -= 25;
      bldHouse.tooltip('destroy');
      bldTent.tooltip('destroy');
      $('buildMine').tooltip('destroy');
      $('buildSilo').tooltip('destroy');
      $('buildQuarry').tooltip('destroy');
      $('buildMill').tooltip('destroy');
      $(this).addClass('hidden');
      $('#upgrades').prepend($("<p>Mates Rates - wood | Houses and Tents Cost Less wood</p>").fadeIn('slow'));
      return updateValues();
    } else {
      return $('#info').prepend($("<p>You need more resources.</p>").fadeIn('slow'));
    }
  });

  upMasonry.mouseenter(function() {
    var masonryPriceText, price, resource;
    masonryPriceText = (function() {
      var _ref, _results;
      _ref = masonry.cost;
      _results = [];
      for (resource in _ref) {
        price = _ref[resource];
        _results.push("" + (titleCase(resource)) + ": -" + price + " ");
      }
      return _results;
    })();
    $(this).tooltip({
      title: masonryPriceText,
      placement: 'left',
      container: 'body'
    });
  });

  upMasonry.click(function() {
    if (wood.amount >= 150 && food.amount >= 50) {
      wood.amount -= 150;
      food.amount -= 50;
      house.cost.stone -= 20;
      hostel.cost.stone -= 40;
      upMasonry.tooltip('destroy');
      upMasonry.addClass('hidden');
      $('#upgrades').prepend($("<p>Mates Rates - Stone | Houses Cost Less Stone</p>").fadeIn('slow'));
      return updateValues();
    } else {
      return $('#info').prepend($("<p>You need more resources.</p>").fadeIn('slow'));
    }
  });

}).call(this);

//# sourceMappingURL=script.map
