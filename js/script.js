// Generated by CoffeeScript 1.7.1
(function() {
  "use strict";
  var $, OreInc, OreIncPrice, bldHouse, bldMill, bldMine, bldQuarry, bldSilo, bldTent, bunkBedPriceText, bunkBeds, checkMaxFood, checkMaxOre, checkMaxStone, checkMaxwood, clickIncrement, food, foodInc, foodIncPrice, gatherFood, gatherOre, gatherStone, gatherWood, hagStone, hagWood, haggleWood, hagwoodPrice, hostel, house, housePriceText, hunter, logInc, logIncPrice, logger, mason, masonry, masonryPriceText, maxPop, mill, millPrice, mine, minePriceText, miner, nIntervId, names, ore, price, quarry, quarryPrice, resource, self, silo, siloPriceText, sleepingBags, sleepingBagsPriceText, stone, stoneInc, stoneIncPrice, tent, titleCase, upMasonry, updateValues, wood, worker;

  $ = jQuery;

  names = {
    realm: "",
    king: ""
  };

  self = {
    upgrade: {
      wood: 100,
      stone: 100,
      food: 100,
      silver: 0,
      gold: 0
    }
  };

  logger = {
    increment: 1,
    amount: 0,
    cost: 10,
    incPrice: {
      iron: 20,
      silver: 10,
      gold: 5
    }
  };

  miner = {
    increment: 1,
    amount: 0,
    cost: 10,
    incPrice: {
      iron: 20,
      silver: 10,
      gold: 5
    }
  };

  hunter = {
    increment: 1,
    amount: 0,
    cost: 10,
    incPrice: {
      iron: 20,
      silver: 10,
      gold: 5
    }
  };

  mason = {
    increment: 1,
    amount: 0,
    cost: 10,
    incPrice: {
      iron: 20,
      silver: 10,
      gold: 5
    }
  };

  worker = {
    amount: 0
  };

  wood = {
    name: "wood",
    amount: 0,
    increment: 0,
    max: 100,
    flag: false
  };

  stone = {
    name: "stone",
    amount: 0,
    increment: 0,
    max: 100,
    flag: false
  };

  food = {
    name: "food",
    amount: 0,
    increment: 0,
    max: 100,
    flag: false
  };

  ore = {
    name: "ore",
    increment: 0,
    amount: 0,
    max: 200,
    flag: false,
    iron: {
      name: "iron",
      amount: 0
    },
    copper: {
      name: "copper",
      amount: 0
    },
    silver: {
      name: "silver",
      amount: 0
    },
    gold: {
      name: "gold",
      amount: 0
    }
  };

  tent = {
    amount: 0,
    residents: 1,
    cost: {
      wood: 30
    },
    upCost: {
      wood: 70,
      silver: 50,
      gold: 25
    }
  };

  house = {
    amount: 0,
    residents: 4,
    cost: {
      wood: 75,
      stone: 25
    },
    upCost: {
      wood: 100,
      stone: 100,
      silver: 60,
      gold: 30
    }
  };

  hostel = {
    amount: 0,
    residents: 10,
    cost: {
      wood: 200,
      stone: 215,
      iron: 25
    }
  };

  mine = {
    amount: 0,
    cost: {
      wood: 100,
      stone: 100,
      iron: 25
    }
  };

  quarry = {
    amount: 0,
    cost: {
      wood: 100,
      stone: 100,
      iron: 0
    }
  };

  silo = {
    amount: 0,
    cost: {
      wood: 100,
      stone: 100,
      iron: 0
    }
  };

  mill = {
    amount: 0,
    cost: {
      wood: 100,
      stone: 100,
      iron: 0
    }
  };

  haggleWood = {
    cost: {
      silver: 50,
      gold: 25
    }
  };

  masonry = {
    cost: {
      silver: 50,
      gold: 25
    }
  };

  clickIncrement = 1;

  maxPop = (tent.residents * tent.amount) + (house.residents * house.amount);

  nIntervId = void 0;

  bunkBeds = $('#upgradeBunkBeds');

  bldTent = $('#buildTent');

  sleepingBags = $('#upgradeSleepingBags');

  bldMine = $('#buildMine');

  bldMill = $('#buildMill');

  bldSilo = $('#buildSilo');

  bldQuarry = $('#buildQuarry');

  hagStone = $('#upgradeMasonry');

  stoneInc = $('#upgradeStrengthenShovels');

  hagWood = $('#upgradeCarpentry');

  foodInc = $('#upgradeSharpenArrows');

  updateValues = function() {
    document.getElementById("maxPop").innerHTML = maxPop;
    document.getElementById("tentAmount").innerHTML = tent.amount;
    document.getElementById("tentResidents").innerHTML = tent.residents;
    document.getElementById("houseAmount").innerHTML = house.amount;
    document.getElementById("houseResidents").innerHTML = house.residents;
    document.getElementById("millAmount").innerHTML = mill.amount;
    document.getElementById("quarryAmount").innerHTML = quarry.amount;
    document.getElementById("siloAmount").innerHTML = silo.amount;
    document.getElementById("mineAmount").innerHTML = mine.amount;
    document.getElementById("maxOre").innerHTML = ore.max;
    document.getElementById("ironAmount").innerHTML = ore.iron.amount;
    document.getElementById("copperAmount").innerHTML = ore.copper.amount;
    document.getElementById("silverAmount").innerHTML = ore.silver.amount;
    document.getElementById("goldAmount").innerHTML = ore.gold.amount;
    document.getElementById("oreAmount").innerHTML = ore.amount;
    document.getElementById("maxWood").innerHTML = wood.max;
    document.getElementById("woodAmount").innerHTML = wood.amount;
    document.getElementById("stoneAmount").innerHTML = stone.amount;
    document.getElementById("foodAmount").innerHTML = food.amount;
    document.getElementById("woodIncrement").innerHTML = wood.increment;
    document.getElementById("maxStone").innerHTML = stone.max;
    document.getElementById("stoneIncrement").innerHTML = stone.increment;
    document.getElementById("maxFood").innerHTML = food.max;
    document.getElementById("foodIncrement").innerHTML = food.increment;
    document.getElementById("workerAmount").innerHTML = worker.amount;
    document.getElementById("loggerAmount").innerHTML = logger.amount;
    document.getElementById("masonAmount").innerHTML = mason.amount;
    document.getElementById("minerAmount").innerHTML = miner.amount;
    document.getElementById("hunterAmount").innerHTML = hunter.amount;
    document.getElementById("loggerCost").innerHTML = logger.cost;
    document.getElementById("minerCost").innerHTML = miner.cost;
    document.getElementById("hunterCost").innerHTML = hunter.cost;
    document.getElementById("masonCost").innerHTML = mason.cost;
    document.getElementById("upgradeSelfTotal").innerHTML = clickIncrement;
  };

  checkMaxwood = function() {
    if (wood.amount >= wood.max) {
      wood.amount = wood.max;
    }
  };

  checkMaxStone = function() {
    if (stone.amount >= stone.max) {
      stone.amount = stone.max;
    }
  };

  checkMaxFood = function() {
    if (food.amount >= food.max) {
      food.amount = food.max;
    }
  };

  checkMaxOre = function() {
    var oreTotal;
    oreTotal = ore.iron.amount + ore.copper.amount + ore.silver.amount + ore.gold.amount;
    if (oreTotal >= ore.max) {
      ore.amount = ore.max;
    }
  };

  gatherWood = function() {
    wood.amount += logger.increment * logger.amount;
    checkMaxwood();
    updateValues();
  };

  gatherStone = function() {
    stone.increment = mason.increment * mason.amount;
    stone.amount += stone.increment;
    checkMaxStone();
    updateValues();
  };

  gatherFood = function() {
    food.increment = hunter.increment * hunter.amount;
    food.amount += food.increment;
    checkMaxFood();
    updateValues();
  };

  gatherOre = function() {
    var oreChoice, ores;
    ores = ["c", "c", "c", "i", "i", "i", "i", "s", "s", "g"];
    oreChoice = ores[Math.floor(Math.random() * ores.length)];
    if (oreChoice === "i") {
      ore.iron.amount += ore.increment;
      ore.amount += ore.increment;
    } else if (oreChoice === "c") {
      ore.copper.amount += ore.increment;
      ore.amount += ore.increment;
    } else if (oreChoice === "s") {
      ore.silver.amount += ore.increment;
      ore.amount += ore.increment;
    } else {
      ore.gold.amount += ore.increment;
      ore.amount += ore.increment;
    }
    checkMaxOre();
    updateValues();
  };

  $(document).ready(function() {
    var beginTick, tick;
    wood.amount += 100;
    food.amount += 100;
    beginTick = function() {
      nIntervId = setInterval(tick, 5000);
    };
    tick = function() {
      gatherWood();
      gatherStone();
      gatherFood();
      gatherOre();
    };
    $("#onLoadModal").modal();
    beginTick();
    updateValues();
    $("#modalClose").click(function() {
      names.realm = document.getElementById("realm").value;
      document.getElementById("realmName").innerHTML = names.realm;
      names.king = document.getElementById("king").value;
      document.getElementById("kingName").innerHTML = names.king;
    });
    bldTent.tooltip({
      title: tentPrice,
      placement: 'left',
      container: 'body'
    });
    bunkBeds.tooltip({
      title: bunkBedPrice,
      placement: 'left',
      container: 'body'
    });
  });

  titleCase = function(str) {
    return str.charAt(0).toUpperCase() + str.slice(1);
  };

  $('#chopWood').click(function() {
    wood.amount += clickIncrement;
    checkMaxwood();
    updateValues();
  });

  $('#mineStone').click(function() {
    stone.amount += clickIncrement;
    checkMaxStone();
    updateValues();
  });

  $('#gatherFood').click(function() {
    food.amount += clickIncrement;
    checkMaxFood();
    updateValues();
  });

  $('#mineOre').click(function() {
    var oreChoice, ores;
    ores = ["c", "c", "c", "i", "i", "i", "i", "s", "s", "g"];
    oreChoice = ores[Math.floor(Math.random() * ores.length)];
    if (oreChoice === "i") {
      ore.iron.amount += clickIncrement;
      ore.amount += clickIncrement;
    } else if (oreChoice === "c") {
      ore.copper.amount += clickIncrement;
      ore.amount += clickIncrement;
    } else if (oreChoice === "s") {
      ore.silver.amount += clickIncrement;
      ore.amount += clickIncrement;
    } else {
      ore.gold.amount += clickIncrement;
      ore.amount += clickIncrement;
    }
    checkMaxOre();
    updateValues();
  });

  $('#hireLogger').click(function() {
    if (worker.amount < maxPop) {
      if (food.amount >= logger.cost) {
        food.amount -= logger.cost;
        worker.amount++;
        logger.amount++;
        logger.cost++;
        wood.increment = logger.increment * logger.amount;
        return updateValues();
      } else {
        return $('#info').prepend($("<p>You need more food.</p>").fadeIn("slow"));
      }
    } else {
      return $('#info').prepend($("<p>You need to build more accommodation.</p>").fadeIn("slow"));
    }
  });

  $('#hireMiner').click(function() {
    if (worker.amount < maxPop) {
      if (food.amount >= miner.cost) {
        food.amount -= miner.cost;
        worker.amount++;
        miner.amount++;
        miner.cost++;
        ore.increment = miner.increment * miner.amount;
        document.getElementById("oreIncrement").innerHTML = ore.increment;
        return updateValues();
      } else {
        return $('#info').prepend($("<p>You need more food.</p>").fadeIn("slow"));
      }
    } else {
      return $('#info').prepend($("<p>You need to build more accommodation.</p>").fadeIn("slow"));
    }
  });

  $('#hireHunter').click(function() {
    if (worker.amount < maxPop) {
      if (food.amount >= hunter.cost) {
        food.amount -= hunter.cost;
        worker.amount++;
        hunter.amount++;
        hunter.cost++;
        food.increment = hunter.increment * hunter.amount;
        return updateValues();
      } else {
        return $('#info').prepend($("<p>You need more food.</p>").fadeIn("slow"));
      }
    } else {
      return $('#info').prepend($("<p>You need to build more accommodation.</p>").fadeIn("slow"));
    }
  });

  $('#hireMason').click(function() {
    if (worker.amount < maxPop) {
      if (food.amount >= mason.cost) {
        food.amount -= mason.cost;
        worker.amount++;
        mason.amount++;
        mason.cost++;
        stone.increment = stone.increment * stone.amount;
        return updateValues();
      } else {
        return $('#info').prepend($("<p>You need more food.</p>").fadeIn("slow"));
      }
    } else {
      return $('#info').prepend($("<p>You need to build more accommodation.</p>").fadeIn("slow"));
    }
  });

  bldTent.click(function() {
    var price, resource, tentPriceText;
    tentPriceText = (function() {
      var _ref, _results;
      _ref = tent.cost;
      _results = [];
      for (resource in _ref) {
        price = _ref[resource];
        _results.push("" + (titleCase(resource)) + ": -" + price + " ");
      }
      return _results;
    })();
    if (wood.amount >= tent.cost.wood) {
      wood.amount -= tent.cost.wood;
      tent.amount += 1;
      tent.cost.wood = (tent.cost.wood * 1.2).toFixed(0);
      maxPop += tent.residents;
      document.getElementById('tentAmount').innerHTML = tent.amount;
      document.getElementById('maxPop').innerHTML = maxPop;
      updateValues();
      bldTent.tooltip('destroy');
      return bldTent.tooltip({
        title: tentPriceText,
        placement: 'left',
        container: 'body'
      });
    } else {
      return $('#info').prepend($("<p>You need more wood.</p>").fadeIn("slow"));
    }
  });

  bldHouse = $('#buildHouse');

  housePriceText = (function() {
    var _ref, _results;
    _ref = house.cost;
    _results = [];
    for (resource in _ref) {
      price = _ref[resource];
      _results.push("" + (titleCase(resource)) + ": -" + price + " ");
    }
    return _results;
  })();

  bldHouse.tooltip({
    title: housePriceText,
    placement: 'left',
    container: 'body'
  });

  bldHouse.click(function() {
    if (wood.amount >= house.cost.wood && stone.amount >= house.cost.stone) {
      wood.amount -= house.cost.wood;
      stone.amount -= house.cost.stone;
      house.amount += 1;
      house.cost.wood = (house.cost.wood * 1.2).toFixed(0);
      house.cost.stone = (house.cost.stone * 1.2).toFixed(0);
      maxPop += house.residents;
      document.getElementById("houseAmount").innerHTML = house.amount;
      document.getElementById("maxPop").innerHTML = maxPop;
      updateValues();
      bldHouse.tooltip('destroy');
      housePriceText = (function() {
        var _ref, _results;
        _ref = house.cost;
        _results = [];
        for (resource in _ref) {
          price = _ref[resource];
          _results.push("" + (titleCase(resource)) + ": -" + price + " ");
        }
        return _results;
      })();
      return bldHouse.tooltip({
        title: housePriceText,
        placement: 'left',
        container: 'body'
      });
    } else {
      return $('#info').prepend($("<p>You need more building materials.</p>").fadeIn("slow"));
    }
  });

  $('#researchHostel').click(function() {
    var animationLength, getPercent, getProgressWrapWidth, progressTotal, progressWrap;
    progressWrap = document.getElemenyByClass("progress-wrap-hostel");
    if (wood.amount >= 400 && stone.amount >= 150) {
      wood.amount -= 400;
      stone.amount -= 150;
      $('#researchHostel').addClass('hidden');
      progressWrap.removeClass('hidden');
      getPercent = progressWrap.data("progress-percent-hostel") / 100;
      getProgressWrapWidth = progressWrap.width();
      progressTotal = getPercent * getProgressWrapWidth;
      animationLength = 25000;
      $('.progress-bar-hostel').stop().animate({
        left: progressTotal
      }, animationLength, function() {
        $('#buildHostel').removeClass('hidden');
        $('.progress-wrap-hostel').addClass('hidden');
        $('.hostelInfo').removeClass('hidden');
        $('.hostelResearchInfo').addClass('hidden');
      });
      return updateValues();
    } else {
      return $('#info').prepend($("<p>You need more building materials.</p>").fadeIn("slow"));
    }
  });

  $('#buildHostel').click(function() {
    if (wood.amount >= hostel.cost.wood && stone.amount >= hostel.cost.stone) {
      wood.amount -= hostel.cost.wood;
      stone.amount -= hostel.cost.stone;
      hostel.amount += 1;
      hostel.cost.wood = hostel.cost.wood * 1.2;
      hostel.cost.stone = hostel.cost.stone * 1.2;
      hostel.cost.wood = hostel.cost.wood.toFixed(0);
      hostel.cost.stone = hostel.cost.stone.toFixed(0);
      maxPop += hostel.residents;
      return updateValues();
    } else {
      return $('#info').prepend($("<p>You need more building materials.</p>").fadeIn("slow"));
    }
  });

  millPrice = (function() {
    var _ref, _results;
    _ref = mill.cost;
    _results = [];
    for (resource in _ref) {
      price = _ref[resource];
      _results.push("" + (titleCase(resource)) + ": -" + price + " ");
    }
    return _results;
  })();

  bldMill.tooltip({
    title: millPrice,
    placement: 'left',
    container: 'body'
  });

  bldMill.click(function() {
    if (wood.amount >= mill.cost.wood && stone.amount >= mill.cost.stone && ore.iron.amount >= mill.cost.iron) {
      wood.amount -= mill.cost.wood;
      stone.amount -= mill.cost.stone;
      ore.iron.amount -= mill.cost.iron;
      mill.amount += 1;
      wood.max += 100;
      document.getElementById("millAmount").innerHTML = mill.amount;
      document.getElementById("maxwood").innerHTML = wood.max;
      bldMill.tooltip('destroy');
      millPrice = (function() {
        var _ref, _results;
        _ref = mill.cost;
        _results = [];
        for (resource in _ref) {
          price = _ref[resource];
          _results.push("" + (titleCase(resource)) + ": -" + price + " ");
        }
        return _results;
      })();
      return bldMill.tooltip({
        title: millPrice,
        placement: 'left',
        container: 'body'
      });
    } else {
      return $('#info').prepend($("<p>You need more building materials.</p>").fadeIn("slow"));
    }
  });

  quarryPrice = (function() {
    var _ref, _results;
    _ref = quarry.cost;
    _results = [];
    for (resource in _ref) {
      price = _ref[resource];
      _results.push("" + (titleCase(resource)) + ": -" + price + " ");
    }
    return _results;
  })();

  bldQuarry.tooltip({
    title: quarryPrice,
    placement: "left",
    container: "body"
  });

  bldQuarry.click(function() {
    if (wood.amount >= quarry.cost.wood && stone.amount >= quarry.cost.stone && Ore.iron.amount >= quarry.cost.iron) {
      wood.amount -= quarry.cost.wood;
      stone.amount -= quarry.cost.stone;
      ore.iron.amount -= quarry.cost.iron;
      quarry.amount += 1;
      stone.max += 100;
      updateValues();
      document.getElementById("quarryAmount").innerHTML = quarry.amount;
      document.getElementById("maxStone").innerHTML = stone.max;
      bldQuarry.tooltip('destroy');
      quarryPrice = (function() {
        var _ref, _results;
        _ref = quarry.cost;
        _results = [];
        for (resource in _ref) {
          price = _ref[resource];
          _results.push("" + (titleCase(resource)) + ": -" + price + " ");
        }
        return _results;
      })();
      return bldQuarry.tooltip({
        title: quarryPrice,
        placement: "left",
        container: "body"
      });
    } else {
      return $('#info').prepend($("<p>You need more building materials.</p>").fadeIn("slow"));
    }
  });

  siloPriceText = (function() {
    var _ref, _results;
    _ref = silo.cost;
    _results = [];
    for (resource in _ref) {
      price = _ref[resource];
      _results.push("" + (titleCase(resource)) + ": -" + price + " ");
    }
    return _results;
  })();

  bldSilo.tooltip({
    title: siloPriceText,
    placement: "left",
    container: "body"
  });

  bldSilo.click(function() {
    if (wood.amount >= silo.cost.wood && stone.amount >= silo.cost.stone && ore.iron.amount >= silo.cost.iron) {
      wood.amount -= silo.cost.wood;
      stone.amount -= silo.cost.stone;
      ore.iron.amount -= silo.cost.iron;
      silo.amount += 1;
      food.max += 100;
      updateValues();
      document.getElementById("siloAmount").innerHTML = silo.amount;
      document.getElementById("maxFood").innerHTML = food.max;
      bldSilo.tooltip("destroy");
      siloPriceText = (function() {
        var _ref, _results;
        _ref = silo.cost;
        _results = [];
        for (resource in _ref) {
          price = _ref[resource];
          _results.push("" + (titleCase(resource)) + ": -" + price + " ");
        }
        return _results;
      })();
      return bldSilo.tooltip({
        title: siloPriceText,
        placement: "left",
        container: "body"
      });
    } else {
      return $('#info').prepend($("<p>You need more building materials.</p>").fadeIn("slow"));
    }
  });

  minePriceText = (function() {
    var _ref, _results;
    _ref = mine.cost;
    _results = [];
    for (resource in _ref) {
      price = _ref[resource];
      _results.push("" + (titleCase(resource)) + ": -" + price + " ");
    }
    return _results;
  })();

  bldMine.tooltip({
    title: minePriceText,
    placement: "left",
    container: "body"
  });

  bldMine.click(function() {
    if (wood.amount >= mine.cost.wood && stone.amount >= mine.cost.stone && ore.iron.amount >= mine.cost.iron) {
      wood.amount -= mine.cost.wood;
      stone.amount -= mine.cost.stone;
      ore.iron.amount -= mine.cost.iron;
      mine.amount += 1;
      ore.max += 100;
      updateValues();
      document.getElementById("mineAmount").innerHTML = mine.amount;
      document.getElementById("maxOre").innerHTML = ore.max;
      bldMine.tooltip("destroy");
      minePriceText = (function() {
        var _ref, _results;
        _ref = mine.cost;
        _results = [];
        for (resource in _ref) {
          price = _ref[resource];
          _results.push("" + (titleCase(resource)) + ": -" + price + " ");
        }
        return _results;
      })();
      return bldMine.tooltip({
        title: minePriceText,
        placement: 'left',
        container: 'body'
      });
    } else {
      return $('#info').prepend($("<p>You need more building materials.</p>").fadeIn("slow"));
    }
  });

  $('#upgradeSelf').click(function() {
    var GoldUpCost, SilverUpCost, upCost;
    upCost = self.increment * 100;
    if (self.increment <= 5) {
      if (wood.amount >= upCost && stone.amount >= upCost && food.amount >= upCost) {
        wood.amount -= upCost;
        stone.amount -= upCost;
        food.amount -= upCost;
        self.increment += 1;
        $('#upgrades').append($("<p>Personal Ability | <span id='clickIncrement'>2</span> Resources Per Click</p>").fadeIn("slow"));
        updateValues();
      } else {
        $('#info').prepend($("<p>You need more resources.</p>").fadeIn("slow"));
      }
    }
    if (self.increment <= 7) {
      SilverUpCost = upCost * 1.2;
      GoldUpCost = upCost * 1.1;
      if (wood.amount >= upCost && stone.amount >= upCost && food.amount >= upCost && Ore.Silver.amount >= SilverUpCost && Ore.Gold.amount >= GoldUpCost) {
        wood.amount -= upCost;
        stone.amount -= upCost;
        food.amount -= upCost;
        ore.silver.amount -= SilverUpCost;
        ore.gold.amount -= GoldUpCost;
        self.increment += 1;
        $('#upgrades').append($("<p>Personal Ability | <span id='clickIncrement'>2</span> Resources Per Click</p>").fadeIn("slow"));
        return updateValues();
      } else {
        return $('#info').prepend($("<p>You need more resources.</p>").fadeIn("slow"));
      }
    }
  });

  sleepingBagsPriceText = (function() {
    var _ref, _results;
    _ref = tent.upCost;
    _results = [];
    for (resource in _ref) {
      price = _ref[resource];
      _results.push("" + (titleCase(resource)) + ": -" + price + " ");
    }
    return _results;
  })();

  sleepingBags.tooltip({
    title: sleepingBagsPriceText,
    placement: 'left',
    container: 'body'
  });

  sleepingBags.click(function(event) {
    if (wood.amount >= 100 && ore.silver.amount >= 15 && ore.gold.amount >= 10) {
      $(event.currentTarget).addClass("hidden");
      wood.amount -= 100;
      ore.silver.amount -= 15;
      ore.gold.amount -= 10;
      tent.residents = 2;
      maxPop += tent.amount;
      document.getElementById("maxPop").innerHTML = maxPop;
      document.getElementById("tentResidents").innerHTML = tent.residents;
      $('#upgrades').prepend($("<p>Double Sleeping Bags | Two People, One Tent</p>").fadeIn("slow"));
      return updateValues();
    } else {
      return $('#info').prepend($("<p>You need more resources.</p>").fadeIn("slow"));
    }
  });

  bunkBedPriceText = (function() {
    var _ref, _results;
    _ref = house.upCost;
    _results = [];
    for (resource in _ref) {
      price = _ref[resource];
      _results.push("" + (titleCase(resource)) + ": -" + price + " ");
    }
    return _results;
  })();

  bunkBeds.tooltip({
    title: bunkBedPriceText,
    placement: 'left',
    container: 'body'
  });

  bunkBeds.click(function() {
    if (wood.amount >= 100 && stone.amount >= 50 && food.amount >= 100) {
      wood.amount -= 100;
      stone.amount -= 50;
      food.amount -= 50;
      house.residents = 5;
      maxPop += house.amount;
      bunkBeds.addClass('hidden');
      $('#upgrades').prepend($("<p>Bunk Beds | Five People, One House</p>").fadeIn("slow"));
      return updateValues();
    } else {
      return $('#info').prepend($("<p>You need more resources.</p>").fadeIn("slow"));
    }
  });

  logInc = $('#upgradeSharpenAxes');

  logIncPrice = (function() {
    var _ref, _results;
    _ref = logger.incPrice;
    _results = [];
    for (resource in _ref) {
      price = _ref[resource];
      _results.push("" + (titleCase(resource)) + ": -" + price + " ");
    }
    return _results;
  })();

  logInc.tooltip({
    title: logIncPrice,
    placement: 'left',
    container: 'body'
  });

  logInc.click(function() {
    if (wood.amount >= 50 && stone.amount >= 100 && food.amount >= 50) {
      wood.amount -= 50;
      stone.amount -= 100;
      food.amount -= 50;
      logger.increment += 1;
      $('.upgradeSharpenAxes').addClass('hidden');
      $('#upgrades').prepend($("<p>Sharpen Axes | Loggers Chop Two wood Each</p>").fadeIn("slow"));
      return updateValues();
    } else {
      return $('#info').prepend($("<p>You need more resources.</p>").fadeIn("slow"));
    }
  });

  OreInc = $('#upgradeSharpenPicks');

  OreIncPrice = (function() {
    var _ref, _results;
    _ref = miner.incPrice;
    _results = [];
    for (resource in _ref) {
      price = _ref[resource];
      _results.push("" + (titleCase(resource)) + ": -" + price + " ");
    }
    return _results;
  })();

  OreInc.tooltip({
    title: OreIncPrice,
    placement: 'left',
    container: 'body'
  });

  OreInc.click(function() {
    if (wood.amount >= 50 && stone.amount >= 100 && food.amount >= 50) {
      wood.amount -= 50;
      stone.amount -= 100;
      food.amount -= 50;
      miner.increment += 1;
      $('.upgradeSharpenPicks').addClass('hidden');
      $('#upgrades').prepend($("<p>Sharpen Picks | Miners get double resources.</p>").fadeIn("slow"));
      return updateValues();
    } else {
      return $('#info').prepend($("<p>You need more resources.</p>").fadeIn("slow"));
    }
  });

  stoneIncPrice = (function() {
    var _ref, _results;
    _ref = mason.incPrice;
    _results = [];
    for (resource in _ref) {
      price = _ref[resource];
      _results.push("" + (titleCase(resource)) + ": -" + price + " ");
    }
    return _results;
  })();

  stoneInc.tooltip({
    title: stoneIncPrice,
    placement: 'left',
    container: 'body'
  });

  stoneInc.click(function() {
    if (wood.amount >= 50 && stone.amount >= 100 && food.amount >= 50) {
      wood.amount -= 50;
      stone.amount -= 100;
      food.amount -= 50;
      mason.increment += 1;
      $('.upgradeStrengthenShovels').addClass('hidden');
      $('#upgrades').prepend($("<p>Strengthen Shovels | Masons get double resources.</p>").fadeIn("slow"));
      return updateValues();
    } else {
      return $('#info').prepend($("<p>You need more resources.</p>").fadeIn("slow"));
    }
  });

  foodIncPrice = (function() {
    var _ref, _results;
    _ref = hunter.incPrice;
    _results = [];
    for (resource in _ref) {
      price = _ref[resource];
      _results.push("" + (titleCase(resource)) + ": -" + price + " ");
    }
    return _results;
  })();

  foodInc.tooltip({
    title: foodIncPrice,
    placement: 'left',
    container: 'body'
  });

  foodInc.click(function() {
    if (wood.amount >= 50 && stone.amount >= 100 && food.amount >= 50) {
      wood.amount -= 50;
      stone.amount -= 100;
      food.amount -= 50;
      hunter.increment += 1;
      $('.upgradeSharpenArrows').addClass('hidden');
      $('#upgrades').prepend($("<p>Sharpen Arrows | Hunters Gather Two Food Each</p>").fadeIn("slow"));
      return updateValues();
    } else {
      return $('#info').prepend($("<p>You need more resources.</p>").fadeIn("slow"));
    }
  });

  hagwoodPrice = (function() {
    var _ref, _results;
    _ref = haggleWood.cost;
    _results = [];
    for (resource in _ref) {
      price = _ref[resource];
      _results.push("" + (titleCase(resource)) + ": -" + price + " ");
    }
    return _results;
  })();

  hagWood.tooltip({
    title: hagwoodPrice,
    placement: 'left',
    container: 'body'
  });

  hagWood.click(function() {
    hagWood = $('#upgradeCarpentry');
    if (ore.gold.amount >= 150 && food.amount >= 50) {
      stone.amount -= 150;
      food.amount -= 50;
      house.cost.wood -= 25;
      tent.cost.wood -= 15;
      hostel.cost.wood -= 40;
      hagWood.addClass('hidden');
      $('#upgrades').prepend($("<p>Mates Rates - wood | Houses and Tents Cost Less wood</p>").fadeIn('slow'));
      return updateValues();
    } else {
      return $('#info').prepend($("<p>You need more resources.</p>").fadeIn('slow'));
    }
  });

  upMasonry = $('#upgradeMasonry');

  masonryPriceText = (function() {
    var _ref, _results;
    _ref = masonry.cost;
    _results = [];
    for (resource in _ref) {
      price = _ref[resource];
      _results.push("" + (titleCase(resource)) + ": -" + price + " ");
    }
    return _results;
  })();

  upMasonry.tooltip({
    title: masonryPriceText,
    placement: 'left',
    container: 'body'
  });

  upMasonry.click(function() {
    if (wood.amount >= 150 && food.amount >= 50) {
      wood.amount -= 150;
      food.amount -= 50;
      house.cost.stone -= 20;
      hostel.cost.stone -= 40;
      updateValues();
      upMasonry.tooltip('destroy');
      upMasonry.addClass('hidden');
      $('#upgrades').prepend($("<p>Mates Rates - Stone | Houses Cost Less Stone</p>").fadeIn('slow'));
      return upMasonry.tooltip({
        title: masonryPriceText,
        placement: 'left',
        container: 'body'
      });
    } else {
      return $('#info').prepend($("<p>You need more resources.</p>").fadeIn('slow'));
    }
  });

}).call(this);

//# sourceMappingURL=script.map
